{"data":{"site":{"siteMetadata":{"title":"Another Chris","author":"Chris Small"}},"markdownRemark":{"id":"91fcc0d6-27de-5edc-a626-24157515ff14","excerpt":"This is a small set of code snippets that may assist as a quick reference when switching between C# and Objective-C concepts. It’s all beginner level and I’ve…","html":"<p>This is a small set of code snippets that may assist as a quick reference when switching between C# and Objective-C concepts. It’s all beginner level and I’ve skipped some major concepts that a book will explain, as well as any C related tasks.</p>\n<p><strong>Update</strong><br>\nThanks to Bill Bumgarner from Apple for his corrections and feedback. In particular alloc and init, autorelease, abstract classes and the constructor sections have been changed.</p>\n<p><strong>Update 2</strong><br>\nSince I wrote this article I’ve shifted from battling with objective-c to using <a href=\"http://www.monotouch.net\">Monotouch</a>. I’m now maintaining <a href=\"/monotouch/monotouch-tips-and-snippets/\">this page</a> of snippets for Monotouch.</p>\n<!--more-->\n<h3>Object creation</h3>\n<p><div id=\"gist4747023\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\">-<span class=\"pl-k\">int</span> <span class=\"pl-en\">main</span>(<span class=\"pl-k\">int</span> argc, <span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span> *argv[] )</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> This is the long hand way of doing it.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\">\tMyObject *myobj = [MyObject <span class=\"pl-c1\">alloc</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\">\t[myobj <span class=\"pl-c1\">init</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Bill: Never split the alloc and init calls:</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> alloc may return a placeholder that is replaced by -init.  Example;  NSString never returns a real instance on +alloc</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> because it isn&#39;t until the -init that it has enough information to know which subclass to use.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\">\tMyObject *myobj2 = [[MyObject <span class=\"pl-c1\">alloc</span>] <span class=\"pl-c1\">init</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Make sure you release after usage, particularly on the itouch/iphone which has no GC.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Going into memory management is too big a topic to cover, so it&#39;s worth reading up on.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> http://developer.apple.com/mac/library/DOCUMENTATION/Cocoa/Conceptual/MemoryMgmt/MemoryMgmt.html</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-gistfile1-m-LC15\" class=\"blob-code blob-code-inner js-file-line\">\t[myobj <span class=\"pl-c1\">release</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-gistfile1-m-LC16\" class=\"blob-code blob-code-inner js-file-line\">\t[myobj2 <span class=\"pl-c1\">release</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-gistfile1-m-LC17\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-gistfile1-m-LC18\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> You can use [myobj autorelease] which will manage releasing retained objects.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-gistfile1-m-LC19\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> I&#39;ve ignored reference counting and retaining though, it fits under memory management which you</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-gistfile1-m-LC20\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> will need to read up on if you don&#39;t want to make a leaky app.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-gistfile1-m-LC21\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-gistfile1-m-LC22\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-gistfile1-m-LC23\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-gistfile1-m-LC24\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Constructors - Objective-C doesn&#39;t have them.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-gistfile1-m-LC25\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> You can sort of simulate them with initWithName but it won&#39;t be the same. As you can see it&#39;s a method (which is really</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-gistfile1-m-LC26\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> what constructors are in C# but with special super powers).</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-gistfile1-m-LC27\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> You could use the initializer like so:</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-gistfile1-m-LC28\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> MyClass *myclass = [[MyClass alloc] initWithName: @&quot;hello world&quot;];</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-gistfile1-m-LC29\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-gistfile1-m-LC30\" class=\"blob-code blob-code-inner js-file-line\">-(MyClass*) initWithName : (<span class=\"pl-c1\">NSString</span>*) aName</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-gistfile1-m-LC31\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"></td>\n        <td id=\"file-gistfile1-m-LC32\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> This also demonstrates the self and super keywords briefly</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"></td>\n        <td id=\"file-gistfile1-m-LC33\" class=\"blob-code blob-code-inner js-file-line\">\tself = [<span class=\"pl-c1\">super</span> <span class=\"pl-c1\">init</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"></td>\n        <td id=\"file-gistfile1-m-LC34\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"></td>\n        <td id=\"file-gistfile1-m-LC35\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Bill: Note that some will claim that self.name = name is wrong;  you shouldn&#39;t use accessors in initializer.  I don&#39;t happen to agree.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"></td>\n        <td id=\"file-gistfile1-m-LC36\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">if</span> (self)</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"></td>\n        <td id=\"file-gistfile1-m-LC37\" class=\"blob-code blob-code-inner js-file-line\">\tself.<span class=\"pl-smi\">name</span> = aName;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"></td>\n        <td id=\"file-gistfile1-m-LC38\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> self;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"></td>\n        <td id=\"file-gistfile1-m-LC39\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"></td>\n        <td id=\"file-gistfile1-m-LC40\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"></td>\n        <td id=\"file-gistfile1-m-LC41\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Abstract class</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"></td>\n        <td id=\"file-gistfile1-m-LC42\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> There is no built in language keyword for this, however it&#39;s easy to implement</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"></td>\n        <td id=\"file-gistfile1-m-LC43\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> by overriding the default init method, returning null</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"></td>\n        <td id=\"file-gistfile1-m-LC44\" class=\"blob-code blob-code-inner js-file-line\">- (<span class=\"pl-c1\">id</span>)init</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"></td>\n        <td id=\"file-gistfile1-m-LC45\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"></td>\n        <td id=\"file-gistfile1-m-LC46\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> You can use NULL or nil</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"></td>\n        <td id=\"file-gistfile1-m-LC47\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">if</span> ([<span class=\"pl-c1\">self</span> <span class=\"pl-c1\">isMemberOfClass:</span> [AbstractClass <span class=\"pl-c1\">class</span>]])</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"></td>\n        <td id=\"file-gistfile1-m-LC48\" class=\"blob-code blob-code-inner js-file-line\">\t{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"></td>\n        <td id=\"file-gistfile1-m-LC49\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"></td>\n        <td id=\"file-gistfile1-m-LC50\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSLog</span>(<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>You can&#39;t instantiate an abstract class<span class=\"pl-pds\">&quot;</span></span>);</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L51\" class=\"blob-num js-line-number\" data-line-number=\"51\"></td>\n        <td id=\"file-gistfile1-m-LC51\" class=\"blob-code blob-code-inner js-file-line\">\t[<span class=\"pl-c1\">self</span> <span class=\"pl-c1\">release</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L52\" class=\"blob-num js-line-number\" data-line-number=\"52\"></td>\n        <td id=\"file-gistfile1-m-LC52\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">NULL</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L53\" class=\"blob-num js-line-number\" data-line-number=\"53\"></td>\n        <td id=\"file-gistfile1-m-LC53\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L54\" class=\"blob-num js-line-number\" data-line-number=\"54\"></td>\n        <td id=\"file-gistfile1-m-LC54\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L55\" class=\"blob-num js-line-number\" data-line-number=\"55\"></td>\n        <td id=\"file-gistfile1-m-LC55\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">if</span>(self = [<span class=\"pl-c1\">super</span> <span class=\"pl-c1\">init</span>])</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L56\" class=\"blob-num js-line-number\" data-line-number=\"56\"></td>\n        <td id=\"file-gistfile1-m-LC56\" class=\"blob-code blob-code-inner js-file-line\">\t{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L57\" class=\"blob-num js-line-number\" data-line-number=\"57\"></td>\n        <td id=\"file-gistfile1-m-LC57\" class=\"blob-code blob-code-inner js-file-line\">\t\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Initialize other stuff</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L58\" class=\"blob-num js-line-number\" data-line-number=\"58\"></td>\n        <td id=\"file-gistfile1-m-LC58\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L59\" class=\"blob-num js-line-number\" data-line-number=\"59\"></td>\n        <td id=\"file-gistfile1-m-LC59\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L60\" class=\"blob-num js-line-number\" data-line-number=\"60\"></td>\n        <td id=\"file-gistfile1-m-LC60\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> You would also need to do this for methods if you wanted to simulate abstract methods</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L61\" class=\"blob-num js-line-number\" data-line-number=\"61\"></td>\n        <td id=\"file-gistfile1-m-LC61\" class=\"blob-code blob-code-inner js-file-line\">\t[<span class=\"pl-c1\">self</span> <span class=\"pl-c1\">release</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L62\" class=\"blob-num js-line-number\" data-line-number=\"62\"></td>\n        <td id=\"file-gistfile1-m-LC62\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">NULL</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L63\" class=\"blob-num js-line-number\" data-line-number=\"63\"></td>\n        <td id=\"file-gistfile1-m-LC63\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747023/raw/c9c456f6cd0b5f8e193f50a9790e1e219a10bc13/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747023#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>The import keyword</h3>\n<p>There’s two ways of importing, just as with C/C++. The one you want to care about most of the time is in quotes. The angled brackets approach forces the preprocessor to look for the file in the system header directory.</p>\n<pre>#import &lt;Foundation/Foundation.h&gt;\n#import \"MyClass.h\"\n</pre>\n<h3>Naming conventions</h3>\n<p>Objective-C is much like Java and uses Pascal case for classes, and camel case for methods and properties. The link at the bottom page gives more information.</p>\n<h3>Reflection equivalent, or typeof/is</h3>\n<p>As far as I’m aware objective-c has no equivalent to reflection in the framework. However for type checking there are many features built in.</p>\n<p><div id=\"gist4747030\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Checking types</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\">-<span class=\"pl-k\">int</span> <span class=\"pl-en\">main</span>(<span class=\"pl-k\">int</span> argc, <span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span> *argv[] )</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> There&#39;s a lot more examples in the 3rd link at the bottom</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\">\tMyObject *myobj = [[MyObject <span class=\"pl-c1\">alloc</span>] <span class=\"pl-c1\">init</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\">\tMyObject *myobj2 = [[MyObject <span class=\"pl-c1\">alloc</span>] <span class=\"pl-c1\">init</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">if</span> ([myobj <span class=\"pl-c1\">class</span>] == [myobj2 <span class=\"pl-c1\">class</span>])</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\">\t\t<span class=\"pl-c1\">NSLog</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>The same types<span class=\"pl-pds\">&quot;</span></span>);</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Also available are isMemberofClass and various respondsTo options.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">if</span> ([myobj <span class=\"pl-c1\">isKindOfClass:</span> [MyObject <span class=\"pl-c1\">class</span>])</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\">\t\t<span class=\"pl-c1\">NSLog</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>myobj is a MyObject<span class=\"pl-pds\">&quot;</span></span>);</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747030/raw/37cb74d50fbc59a89ee36a707c9f60c18f115d2b/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747030#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Foundation.h, Cocoa, UIKit and AppKit</h3>\n<p>Regardless of your application, you will almost always include Foundation.h as an import. This is the base library of classes like NSObject, NSString and so on, much like mscorlib.dll in .NET.</p>\n<p>Cocoa is used for Cocoa applications on OS X, however on the iPhone/iTouch this is Cocoa Touch library. AppKit is part of the desktop/netbook Cocoa library, however this is replaced by UIKit on the Touch platform. Confused yet?</p>\n<h3>Classes, encapsulation</h3>\n<p>Below shows most features you’ll need to know about, with comments describing what is going on. I’ve arranged it in 2 separate files - the header and implementation file. It’s possible to define a class and implementation in the same file however the standard is to have the interface in a header (.h) file, and the implementation in the source (.m) file.</p>\n<p><div id=\"gist4747038\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> This is the header file, &quot;Person.h&quot;. The NSCopying is an example of implementing a protocol</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\">@interface Person : NSObject <span class=\"pl-c\"><span class=\"pl-c\">//</span>&lt;NSCopying&gt;;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> As with .NET, public for member variables isn`t recommended.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@public</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">BOOL</span> thisIsWrong;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Protected is the default for fields</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@protected</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\">\tAddress *address;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSString</span> *title;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSString</span> *firstname;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSString</span> *lastname;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">BOOL</span> isMale;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-gistfile1-m-LC15\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-gistfile1-m-LC16\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Self-explanatory</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-gistfile1-m-LC17\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@private</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-gistfile1-m-LC18\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-gistfile1-m-LC19\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> There&#39;s various ways of using double/floats.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-gistfile1-m-LC20\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> This is one of them, akin to a Javascript Number object (e.g. floats and ints).</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-gistfile1-m-LC21\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSNumber</span> *age;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-gistfile1-m-LC22\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">int</span> ageInDogYears; <span class=\"pl-c\"><span class=\"pl-c\">//</span> n.b. This is not a pointer</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-gistfile1-m-LC23\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSInteger</span> *ageInCatYears;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-gistfile1-m-LC24\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-gistfile1-m-LC25\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Some other C-based datatypes none of them used</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-gistfile1-m-LC26\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">char</span> firstLetter;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-gistfile1-m-LC27\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">double</span> aDouble;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-gistfile1-m-LC28\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">float</span> aFloat;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-gistfile1-m-LC29\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-gistfile1-m-LC30\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Collections - mutables allow you to add to them outside of the constructor.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-gistfile1-m-LC31\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSArray</span> *myArray;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"></td>\n        <td id=\"file-gistfile1-m-LC32\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSMutableArray</span> *myMutableArray;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"></td>\n        <td id=\"file-gistfile1-m-LC33\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSMutableDictionary</span> *myDictionary;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"></td>\n        <td id=\"file-gistfile1-m-LC34\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"></td>\n        <td id=\"file-gistfile1-m-LC35\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"></td>\n        <td id=\"file-gistfile1-m-LC36\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"></td>\n        <td id=\"file-gistfile1-m-LC37\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Properties</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"></td>\n        <td id=\"file-gistfile1-m-LC38\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"></td>\n        <td id=\"file-gistfile1-m-LC39\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> @property and @synthesis adds automatic getter and setters to the underlying fields.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"></td>\n        <td id=\"file-gistfile1-m-LC40\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> You list the fields you have above, and they are then accessible with dot notation</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"></td>\n        <td id=\"file-gistfile1-m-LC41\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> with thread-safe getters/setters automatically created for you.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"></td>\n        <td id=\"file-gistfile1-m-LC42\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> The @synthesis is required in the @implementation. You access your properties using self-&amp;gt;title</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"></td>\n        <td id=\"file-gistfile1-m-LC43\" class=\"blob-code blob-code-inner js-file-line\">@property <span class=\"pl-c1\">BOOL</span> isMale;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"></td>\n        <td id=\"file-gistfile1-m-LC44\" class=\"blob-code blob-code-inner js-file-line\">@property <span class=\"pl-c1\">NSString</span> *title;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"></td>\n        <td id=\"file-gistfile1-m-LC45\" class=\"blob-code blob-code-inner js-file-line\">@property <span class=\"pl-c1\">NSString</span> *firstname;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"></td>\n        <td id=\"file-gistfile1-m-LC46\" class=\"blob-code blob-code-inner js-file-line\">@property <span class=\"pl-c1\">NSString</span> *lastname;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"></td>\n        <td id=\"file-gistfile1-m-LC47\" class=\"blob-code blob-code-inner js-file-line\">@property Address *address;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"></td>\n        <td id=\"file-gistfile1-m-LC48\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"></td>\n        <td id=\"file-gistfile1-m-LC49\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Property options (more detail can be found at the links at the bottom of the page)</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"></td>\n        <td id=\"file-gistfile1-m-LC50\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Something a C# developer might find odd with objective-c is that if you subclass a class,</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L51\" class=\"blob-num js-line-number\" data-line-number=\"51\"></td>\n        <td id=\"file-gistfile1-m-LC51\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> you can make readonly or getter properties writable.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L52\" class=\"blob-num js-line-number\" data-line-number=\"52\"></td>\n        <td id=\"file-gistfile1-m-LC52\" class=\"blob-code blob-code-inner js-file-line\">@property (readonly) <span class=\"pl-c1\">BOOL</span> isMale; <span class=\"pl-c\"><span class=\"pl-c\">//</span> getter only</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L53\" class=\"blob-num js-line-number\" data-line-number=\"53\"></td>\n        <td id=\"file-gistfile1-m-LC53\" class=\"blob-code blob-code-inner js-file-line\">@property (readwrite) *firstname; <span class=\"pl-c\"><span class=\"pl-c\">//</span> readwrite is the default and not required.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L54\" class=\"blob-num js-line-number\" data-line-number=\"54\"></td>\n        <td id=\"file-gistfile1-m-LC54\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L55\" class=\"blob-num js-line-number\" data-line-number=\"55\"></td>\n        <td id=\"file-gistfile1-m-LC55\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Setter related options</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L56\" class=\"blob-num js-line-number\" data-line-number=\"56\"></td>\n        <td id=\"file-gistfile1-m-LC56\" class=\"blob-code blob-code-inner js-file-line\">@property (readonly,assign) <span class=\"pl-c1\">NSString</span> *title; <span class=\"pl-c\"><span class=\"pl-c\">//</span> assign is the default and not required.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L57\" class=\"blob-num js-line-number\" data-line-number=\"57\"></td>\n        <td id=\"file-gistfile1-m-LC57\" class=\"blob-code blob-code-inner js-file-line\">@property (retain) *lastname; <span class=\"pl-c\"><span class=\"pl-c\">//</span> this indicates the property should be retained, incrementing the reference count</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L58\" class=\"blob-num js-line-number\" data-line-number=\"58\"></td>\n        <td id=\"file-gistfile1-m-LC58\" class=\"blob-code blob-code-inner js-file-line\">@property (copy) *address; <span class=\"pl-c\"><span class=\"pl-c\">//</span> this indicates the object being assigned it copied, using its copy method.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L59\" class=\"blob-num js-line-number\" data-line-number=\"59\"></td>\n        <td id=\"file-gistfile1-m-LC59\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L60\" class=\"blob-num js-line-number\" data-line-number=\"60\"></td>\n        <td id=\"file-gistfile1-m-LC60\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L61\" class=\"blob-num js-line-number\" data-line-number=\"61\"></td>\n        <td id=\"file-gistfile1-m-LC61\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Methods -</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L62\" class=\"blob-num js-line-number\" data-line-number=\"62\"></td>\n        <td id=\"file-gistfile1-m-LC62\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> All methods are public, there is no access modifiers. The way to implement</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L63\" class=\"blob-num js-line-number\" data-line-number=\"63\"></td>\n        <td id=\"file-gistfile1-m-LC63\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> private methods is to remove the definition in the .h file, so they only</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L64\" class=\"blob-num js-line-number\" data-line-number=\"64\"></td>\n        <td id=\"file-gistfile1-m-LC64\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> exist in the implementation. Notice the location of the pointer &#39;*&#39; for definitions.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L65\" class=\"blob-num js-line-number\" data-line-number=\"65\"></td>\n        <td id=\"file-gistfile1-m-LC65\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L66\" class=\"blob-num js-line-number\" data-line-number=\"66\"></td>\n        <td id=\"file-gistfile1-m-LC66\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> A &#39;+&#39; indicates a static method</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L67\" class=\"blob-num js-line-number\" data-line-number=\"67\"></td>\n        <td id=\"file-gistfile1-m-LC67\" class=\"blob-code blob-code-inner js-file-line\">+(<span class=\"pl-k\">void</span>) doVeryLittle;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L68\" class=\"blob-num js-line-number\" data-line-number=\"68\"></td>\n        <td id=\"file-gistfile1-m-LC68\" class=\"blob-code blob-code-inner js-file-line\">+(<span class=\"pl-c1\">BOOL</span>) isLord : (<span class=\"pl-c1\">NSString</span>*) title;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L69\" class=\"blob-num js-line-number\" data-line-number=\"69\"></td>\n        <td id=\"file-gistfile1-m-LC69\" class=\"blob-code blob-code-inner js-file-line\">+(<span class=\"pl-c1\">NSString</span>*) stringFormatExample : (<span class=\"pl-c1\">NSString</span>*) title : (<span class=\"pl-c1\">NSString</span>*) firstName;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L70\" class=\"blob-num js-line-number\" data-line-number=\"70\"></td>\n        <td id=\"file-gistfile1-m-LC70\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L71\" class=\"blob-num js-line-number\" data-line-number=\"71\"></td>\n        <td id=\"file-gistfile1-m-LC71\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> A &#39;-&#39; indicates instance methods</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L72\" class=\"blob-num js-line-number\" data-line-number=\"72\"></td>\n        <td id=\"file-gistfile1-m-LC72\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-k\">void</span>) runForAnHour;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L73\" class=\"blob-num js-line-number\" data-line-number=\"73\"></td>\n        <td id=\"file-gistfile1-m-LC73\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-c1\">NSString</span>*) getFullName;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L74\" class=\"blob-num js-line-number\" data-line-number=\"74\"></td>\n        <td id=\"file-gistfile1-m-LC74\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-c1\">NSString</span>*) getNewTitle: (<span class=\"pl-c1\">BOOL</span>) isALord : (<span class=\"pl-c1\">BOOL</span>) isMale;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L75\" class=\"blob-num js-line-number\" data-line-number=\"75\"></td>\n        <td id=\"file-gistfile1-m-LC75\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L76\" class=\"blob-num js-line-number\" data-line-number=\"76\"></td>\n        <td id=\"file-gistfile1-m-LC76\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L77\" class=\"blob-num js-line-number\" data-line-number=\"77\"></td>\n        <td id=\"file-gistfile1-m-LC77\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Protocols</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L78\" class=\"blob-num js-line-number\" data-line-number=\"78\"></td>\n        <td id=\"file-gistfile1-m-LC78\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Creating a protocol forces subclasses to implement the methods listed unless you mark them as optional.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L79\" class=\"blob-num js-line-number\" data-line-number=\"79\"></td>\n        <td id=\"file-gistfile1-m-LC79\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> They are akin to interfaces however you can only force methods to be implemented. Classes can</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L80\" class=\"blob-num js-line-number\" data-line-number=\"80\"></td>\n        <td id=\"file-gistfile1-m-LC80\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> implement protocols from multiple different classes.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L81\" class=\"blob-num js-line-number\" data-line-number=\"81\"></td>\n        <td id=\"file-gistfile1-m-LC81\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L82\" class=\"blob-num js-line-number\" data-line-number=\"82\"></td>\n        <td id=\"file-gistfile1-m-LC82\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">@protocol</span> <span class=\"pl-en\">MyProtocol</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L83\" class=\"blob-num js-line-number\" data-line-number=\"83\"></td>\n        <td id=\"file-gistfile1-m-LC83\" class=\"blob-code blob-code-inner js-file-line\">\t- (<span class=\"pl-k\">int</span>) setFavouriteBand;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L84\" class=\"blob-num js-line-number\" data-line-number=\"84\"></td>\n        <td id=\"file-gistfile1-m-LC84\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L85\" class=\"blob-num js-line-number\" data-line-number=\"85\"></td>\n        <td id=\"file-gistfile1-m-LC85\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@optional</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L86\" class=\"blob-num js-line-number\" data-line-number=\"86\"></td>\n        <td id=\"file-gistfile1-m-LC86\" class=\"blob-code blob-code-inner js-file-line\">\t-(<span class=\"pl-k\">int</span>) isMadonnaFan;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L87\" class=\"blob-num js-line-number\" data-line-number=\"87\"></td>\n        <td id=\"file-gistfile1-m-LC87\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@end</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L88\" class=\"blob-num js-line-number\" data-line-number=\"88\"></td>\n        <td id=\"file-gistfile1-m-LC88\" class=\"blob-code blob-code-inner js-file-line\">@end</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L89\" class=\"blob-num js-line-number\" data-line-number=\"89\"></td>\n        <td id=\"file-gistfile1-m-LC89\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L90\" class=\"blob-num js-line-number\" data-line-number=\"90\"></td>\n        <td id=\"file-gistfile1-m-LC90\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L91\" class=\"blob-num js-line-number\" data-line-number=\"91\"></td>\n        <td id=\"file-gistfile1-m-LC91\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Categories</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L92\" class=\"blob-num js-line-number\" data-line-number=\"92\"></td>\n        <td id=\"file-gistfile1-m-LC92\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> This is simply a way of grouping methods together in smaller blocks, or categories.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L93\" class=\"blob-num js-line-number\" data-line-number=\"93\"></td>\n        <td id=\"file-gistfile1-m-LC93\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Other classes can also create new categories for your class, but they cannot add new fields.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L94\" class=\"blob-num js-line-number\" data-line-number=\"94\"></td>\n        <td id=\"file-gistfile1-m-LC94\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L95\" class=\"blob-num js-line-number\" data-line-number=\"95\"></td>\n        <td id=\"file-gistfile1-m-LC95\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">@interface</span> <span class=\"pl-en\">Person</span> (Music) <span class=\"pl-c\"><span class=\"pl-c\">//</span> The implementation code needs the brackets and category name too</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L96\" class=\"blob-num js-line-number\" data-line-number=\"96\"></td>\n        <td id=\"file-gistfile1-m-LC96\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-k\">void</span>) <span class=\"pl-en\">setFavouriteBand</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L97\" class=\"blob-num js-line-number\" data-line-number=\"97\"></td>\n        <td id=\"file-gistfile1-m-LC97\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-k\">void</span>) <span class=\"pl-en\">isXFactorFan</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L98\" class=\"blob-num js-line-number\" data-line-number=\"98\"></td>\n        <td id=\"file-gistfile1-m-LC98\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">@end</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L99\" class=\"blob-num js-line-number\" data-line-number=\"99\"></td>\n        <td id=\"file-gistfile1-m-LC99\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L100\" class=\"blob-num js-line-number\" data-line-number=\"100\"></td>\n        <td id=\"file-gistfile1-m-LC100\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Implementation for the above</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L101\" class=\"blob-num js-line-number\" data-line-number=\"101\"></td>\n        <td id=\"file-gistfile1-m-LC101\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">import</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Person.h<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L102\" class=\"blob-num js-line-number\" data-line-number=\"102\"></td>\n        <td id=\"file-gistfile1-m-LC102\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">@implementation</span> <span class=\"pl-en\">Person</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L103\" class=\"blob-num js-line-number\" data-line-number=\"103\"></td>\n        <td id=\"file-gistfile1-m-LC103\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> To match the @property definitions in &#39;Person.h&#39;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L104\" class=\"blob-num js-line-number\" data-line-number=\"104\"></td>\n        <td id=\"file-gistfile1-m-LC104\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@synthesize</span> isMale,title,firstname,lastname,address;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L105\" class=\"blob-num js-line-number\" data-line-number=\"105\"></td>\n        <td id=\"file-gistfile1-m-LC105\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L106\" class=\"blob-num js-line-number\" data-line-number=\"106\"></td>\n        <td id=\"file-gistfile1-m-LC106\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> You can also specify the backing field for a property (and override existing properties):</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L107\" class=\"blob-num js-line-number\" data-line-number=\"107\"></td>\n        <td id=\"file-gistfile1-m-LC107\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@synthesize</span> title = internalTitle;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L108\" class=\"blob-num js-line-number\" data-line-number=\"108\"></td>\n        <td id=\"file-gistfile1-m-LC108\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L109\" class=\"blob-num js-line-number\" data-line-number=\"109\"></td>\n        <td id=\"file-gistfile1-m-LC109\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Static variables (private)</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L110\" class=\"blob-num js-line-number\" data-line-number=\"110\"></td>\n        <td id=\"file-gistfile1-m-LC110\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> These are declared inside the implementation not the header.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L111\" class=\"blob-num js-line-number\" data-line-number=\"111\"></td>\n        <td id=\"file-gistfile1-m-LC111\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">static</span> <span class=\"pl-k\">int</span> serial;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L112\" class=\"blob-num js-line-number\" data-line-number=\"112\"></td>\n        <td id=\"file-gistfile1-m-LC112\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">@end</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L113\" class=\"blob-num js-line-number\" data-line-number=\"113\"></td>\n        <td id=\"file-gistfile1-m-LC113\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L114\" class=\"blob-num js-line-number\" data-line-number=\"114\"></td>\n        <td id=\"file-gistfile1-m-LC114\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L115\" class=\"blob-num js-line-number\" data-line-number=\"115\"></td>\n        <td id=\"file-gistfile1-m-LC115\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Categories</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L116\" class=\"blob-num js-line-number\" data-line-number=\"116\"></td>\n        <td id=\"file-gistfile1-m-LC116\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Implementing a category</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L117\" class=\"blob-num js-line-number\" data-line-number=\"117\"></td>\n        <td id=\"file-gistfile1-m-LC117\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L118\" class=\"blob-num js-line-number\" data-line-number=\"118\"></td>\n        <td id=\"file-gistfile1-m-LC118\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">@implementation</span> <span class=\"pl-en\">Person</span> (Music)</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L119\" class=\"blob-num js-line-number\" data-line-number=\"119\"></td>\n        <td id=\"file-gistfile1-m-LC119\" class=\"blob-code blob-code-inner js-file-line\">\t-(<span class=\"pl-k\">void</span>) setFavouriteBand</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L120\" class=\"blob-num js-line-number\" data-line-number=\"120\"></td>\n        <td id=\"file-gistfile1-m-LC120\" class=\"blob-code blob-code-inner js-file-line\">\t{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L121\" class=\"blob-num js-line-number\" data-line-number=\"121\"></td>\n        <td id=\"file-gistfile1-m-LC121\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L122\" class=\"blob-num js-line-number\" data-line-number=\"122\"></td>\n        <td id=\"file-gistfile1-m-LC122\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L123\" class=\"blob-num js-line-number\" data-line-number=\"123\"></td>\n        <td id=\"file-gistfile1-m-LC123\" class=\"blob-code blob-code-inner js-file-line\">\t-(<span class=\"pl-k\">void</span>) isXFactorFan;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L124\" class=\"blob-num js-line-number\" data-line-number=\"124\"></td>\n        <td id=\"file-gistfile1-m-LC124\" class=\"blob-code blob-code-inner js-file-line\">\t{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L125\" class=\"blob-num js-line-number\" data-line-number=\"125\"></td>\n        <td id=\"file-gistfile1-m-LC125\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L126\" class=\"blob-num js-line-number\" data-line-number=\"126\"></td>\n        <td id=\"file-gistfile1-m-LC126\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">@end</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747038/raw/37463e105d64db18a729aa9baf8b760098648674/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747038#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Exception handling</h3>\n<p><div id=\"gist4747042\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-k\">void</span>) exceptionExample</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Catching exceptions should be familiar to C# programmers</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@try</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\">\t{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@catch</span> (<span class=\"pl-c1\">NSException</span> *exception)</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\">\t{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\">\t\t<span class=\"pl-c1\">NSLog</span>(<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span><span class=\"pl-c1\">%@</span> error occured - <span class=\"pl-c1\">%@</span><span class=\"pl-pds\">&quot;</span></span>,[exception <span class=\"pl-c1\">name</span>], [exception <span class=\"pl-c1\">reason</span>]);</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@finally</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-gistfile1-m-LC15\" class=\"blob-code blob-code-inner js-file-line\">\t{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-gistfile1-m-LC16\" class=\"blob-code blob-code-inner js-file-line\">\t\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Some clean up code</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-gistfile1-m-LC17\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-gistfile1-m-LC18\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-gistfile1-m-LC19\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-gistfile1-m-LC20\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Throwing an exception. Apple says:</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-gistfile1-m-LC21\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> &quot;Instead of exceptions, error objects (NSError) and the Cocoa error-delivery mechanism are the</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-gistfile1-m-LC22\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> recommended way to communicate expected errors in Cocoa applications&quot;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-gistfile1-m-LC23\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-gistfile1-m-LC24\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSException</span>* myException = [<span class=\"pl-c1\">NSException</span> <span class=\"pl-c1\">exceptionWithName:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>FileNotFoundException<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-gistfile1-m-LC25\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">reason:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>File Not Found on System<span class=\"pl-pds\">&quot;</span></span><span class=\"pl-c1\">userInfo:</span><span class=\"pl-c1\">nil</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-gistfile1-m-LC26\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">@throw</span> myException;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-gistfile1-m-LC27\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-gistfile1-m-LC28\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Or..</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-gistfile1-m-LC29\" class=\"blob-code blob-code-inner js-file-line\">\t[<span class=\"pl-c1\">NSException</span> <span class=\"pl-c1\">raise</span>:<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>My reason<span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-c1\">format:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>format string here<span class=\"pl-pds\">&quot;</span></span>, myobject]</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-gistfile1-m-LC30\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747042/raw/a88c4cde08877d5d389c5dd90e2e7bf509cd6424/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747042#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>String example</h3>\n<p><div id=\"gist4747045\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-c1\">NSString</span>*) stringExample</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> You prepend a string with @ to indicate to the objective-c compiler that it&#39;s an NSString.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Release messages (see above) aren&#39;t required for these and are ignored.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSString</span> *result = <span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>initial<span class=\"pl-pds\">&quot;</span></span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Strings are immutable as in .NET, however not interned so the same</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> string can exist in two memory locations. There is a subclass of</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> NSString called NSMutableString which is akin to a StringBuilder.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\">\tresult = [result <span class=\"pl-c1\">stringByAppendingString:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span> test<span class=\"pl-pds\">&quot;</span></span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> result;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-c1\">NSString</span>*) stringFormatExample : (<span class=\"pl-c1\">NSString</span>*) title : (<span class=\"pl-c1\">NSString</span>*) firstName</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-gistfile1-m-LC15\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-gistfile1-m-LC16\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> This is the equivalent in C# of &#39;return firstname + &quot; &quot; + firstName;&#39; or the String.format equivalent</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-gistfile1-m-LC17\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> As far as I know, there is no way of concatenation without using formatting.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-gistfile1-m-LC18\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> %@ is the string format to print an object, like {0}. The overriden description</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-gistfile1-m-LC19\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> method controls the output for an object, which is demonstrated below.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-gistfile1-m-LC20\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSString</span> *result = [<span class=\"pl-c1\">NSString</span> <span class=\"pl-c1\">stringWithFormat:</span> <span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span><span class=\"pl-c1\">%@</span> <span class=\"pl-c1\">%@</span><span class=\"pl-pds\">&quot;</span></span>,title,firstName];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-gistfile1-m-LC21\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> result;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-gistfile1-m-LC22\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747045/raw/7de19ca28aff2e1be5ee3d3815ddaa1fa3ab1924/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747045#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Documentation</h3>\n<p><div id=\"gist4747046\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Documentation.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> The defacto for objective-c is DOxygen, much like C++ and C. Its syntax</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> is straight forward, just like .NET you use a triple comment line &#39;///&#39; (or /* */)</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> and use various tokens like &#39;param&#39; and &#39;return&#39;. These can start with</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> a &#39;\\&#39; or &#39;@&#39; like javadoc. There&#39;s no summary token, you simply start</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> with &#39;///&#39; and that is your summary. The documentation goes in the .h.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> There is a good Mac OS X DOxygen GUI that produces HTML for you.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> http://www.codeproject.com/KB/tips/doxysetup.aspx</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> http://developer.apple.com/tools/creatingdocsetswithdoxygen.html</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Example:</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span>/ \\param title The title of the person</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span>/ \\param firstName The person`s firstname</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span>/ \\return A new name based on the title and firstName</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span>/ Retrieves a new name based on the provided title and firstname</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-gistfile1-m-LC15\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-c1\">NSString</span>*) exampleDocumentation : (<span class=\"pl-c1\">NSString</span>*) title : (<span class=\"pl-c1\">NSString</span>*) firstName;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-gistfile1-m-LC16\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-gistfile1-m-LC17\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span>-------------</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-gistfile1-m-LC18\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-c1\">NSString</span>*) description</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-gistfile1-m-LC19\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-gistfile1-m-LC20\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> This is similar to overriding ToString() in .NET for console/string.format output.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-gistfile1-m-LC21\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> NSLog displays the description property, which this method is used to retrieve its value -  its definition is in NSObject.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-gistfile1-m-LC22\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Also available is debugDescription</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-gistfile1-m-LC23\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>person class<span class=\"pl-pds\">&quot;</span></span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-gistfile1-m-LC24\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747046/raw/2e03b42ab0ed68ebfbce0d87102564f039d56c04/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747046#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Collections: Dictionary</h3>\n<p><div id=\"gist4747055\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\">-(<span class=\"pl-k\">void</span>) dictionaryExample</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> NSDictionary exists, but you can`t add/remove items to it once it`s initialised</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> NSMutableDictionary inherits from NSDictionary</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> More info: http://developer.apple.com/documentation/Cocoa/Conceptual/Collections/Collections.html</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSMutableDictionary</span> *dictionary = [<span class=\"pl-c1\">NSMutableDictionary</span> <span class=\"pl-c1\">dictionary</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> This is another way to initialise the dictionary, remember to use nil at the end</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> nil is just another definition of NULL</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSMutableDictionary</span> *dictionary2 = [<span class=\"pl-c1\">NSMutableDictionary</span> <span class=\"pl-c1\">dictionaryWithObjectsAndKeys:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>obj1<span class=\"pl-pds\">&quot;</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>key1<span class=\"pl-pds\">&quot;</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>obj2<span class=\"pl-pds\">&quot;</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>key2<span class=\"pl-pds\">&quot;</span></span>,<span class=\"pl-c1\">nil</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Adding keys</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\">\t[dictionary <span class=\"pl-c1\">setObject:</span> <span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>my object<span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-c1\">forKey:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>key<span class=\"pl-pds\">&quot;</span></span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\">\t[dictionary <span class=\"pl-c1\">setObject:</span> <span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>my object<span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-c1\">forKey:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>key2<span class=\"pl-pds\">&quot;</span></span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-gistfile1-m-LC15\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-gistfile1-m-LC16\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Getting by a single key</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-gistfile1-m-LC17\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSLog</span>(<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span><span class=\"pl-c1\">%@</span><span class=\"pl-pds\">&quot;</span></span>, [dictionary <span class=\"pl-c1\">objectForKey:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>key<span class=\"pl-pds\">&quot;</span></span>]);</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-gistfile1-m-LC18\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-gistfile1-m-LC19\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Enumerating</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-gistfile1-m-LC20\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">for</span> (<span class=\"pl-c1\">NSString</span> *key in dictionary)</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-gistfile1-m-LC21\" class=\"blob-code blob-code-inner js-file-line\">\t\t<span class=\"pl-c1\">NSLog</span>(<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>key: <span class=\"pl-c1\">%@</span>, value: <span class=\"pl-c1\">%@</span><span class=\"pl-pds\">&quot;</span></span>, key,[dictionary <span class=\"pl-c1\">objectForKey:</span>key]);</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-gistfile1-m-LC22\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-gistfile1-m-LC23\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Lookups would be performed using enumeration, there is no IndexOf or equivalent.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-gistfile1-m-LC24\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-gistfile1-m-LC25\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Deleting</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-gistfile1-m-LC26\" class=\"blob-code blob-code-inner js-file-line\">\t[dictionary <span class=\"pl-c1\">removeObjectForKey:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>key<span class=\"pl-pds\">&quot;</span></span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-gistfile1-m-LC27\" class=\"blob-code blob-code-inner js-file-line\">\t</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-gistfile1-m-LC28\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> Count comes from the base, NSDictionary</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-gistfile1-m-LC29\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSLog</span>(<span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>Dictionary count: <span class=\"pl-c1\">%i</span><span class=\"pl-pds\">&quot;</span></span>, [dictionary <span class=\"pl-c1\">count</span>]);</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-gistfile1-m-LC30\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747055/raw/b0ac02adbf378af38c17eee9769010528edde011/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747055#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Date formatting</h3>\n<p><div id=\"gist4747060\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-gistfile1-m\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-objective-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-gistfile1-m-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-gistfile1-m-LC1\" class=\"blob-code blob-code-inner js-file-line\">+(<span class=\"pl-c1\">NSString</span>*) todaysDate</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-gistfile1-m-LC2\" class=\"blob-code blob-code-inner js-file-line\">{</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-gistfile1-m-LC3\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> This is an example of date formatting in objective-c/foundation.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-gistfile1-m-LC4\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> The DateFormatter performs a role similar to DateTime.ToString, there is</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-gistfile1-m-LC5\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> also a fairly rich API in the NSDate class for doing date comparisons and creating new dates.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-gistfile1-m-LC6\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSDate</span> *now = [<span class=\"pl-c1\">NSDate</span> <span class=\"pl-c1\">date</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-gistfile1-m-LC7\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSDateFormatter</span> *formatter = [[<span class=\"pl-c1\">NSDateFormatter</span> <span class=\"pl-c1\">alloc</span>] <span class=\"pl-c1\">init</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-gistfile1-m-LC8\" class=\"blob-code blob-code-inner js-file-line\">\t[formatter <span class=\"pl-c1\">setDateFormat:</span><span class=\"pl-s\"><span class=\"pl-pds\">@&quot;</span>dd MM YYYY<span class=\"pl-pds\">&quot;</span></span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-gistfile1-m-LC9\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-gistfile1-m-LC10\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-c1\">NSString</span> *result = [formatter <span class=\"pl-c1\">stringFromDate:</span>now];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-gistfile1-m-LC11\" class=\"blob-code blob-code-inner js-file-line\">\t[formatter <span class=\"pl-c1\">release</span>];</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-gistfile1-m-LC12\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-gistfile1-m-LC13\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> result;</td>\n      </tr>\n      <tr>\n        <td id=\"file-gistfile1-m-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-gistfile1-m-LC14\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/yetanotherchris/4747060/raw/02964cd26ea01e8218273c6ea11903f9e3b057aa/gistfile1.m\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/yetanotherchris/4747060#file-gistfile1-m\">gistfile1.m</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Links</h3>\n<ul>\n<li>Fortunately the Apple documentation is high quality for the Foundation and Cocoa APIs, and has a large amount of tasks much like the MSDN documentation. <a href=\"http://developer.apple.com/documentation/Cocoa/Conceptual/Exceptions/Tasks/RaisingExceptions.html\">Here’s an example</a>.</li>\n<li>Most of the above has come from reading <a href=\"http://www.amazon.com/gp/product/0321566157?ie=UTF8&#x26;tag=sloppycode-20&#x26;linkCode=as2&#x26;camp=1789&#x26;creative=9325&#x26;creativeASIN=0596526784\">Stephen G. Kochan’s Programming in Objective-C 2.0 book</a> <em>(affliate link)</em>. I recommend it, however I haven’t really read any others. </li>\n<li><a href=\"http://developer.apple.com/mac/library/documentation/Cocoa/Conceptual/CodingGuidelines/Articles/NamingBasics.html#//apple_ref/doc/uid/20001281-BBCHBFAH\">Naming convention information</a>.</li>\n<li>There is a huge wealth of information on the web - a good tutorial can be found <a href=\"http://www.otierney.net/objective-c.html\">here</a>, and <a href=\"http://theocacao.com/document.page/510\">here</a>.</li>\n<li>Information about synthesised properties can be found on the <a href=\"http://developer.apple.com/documentation/Cocoa/Conceptual/ObjectiveC/Articles/ocProperties.html\">Apple developer site</a> and <a href=\"http://www.cocoacast.com/?q=node/103\">here</a>.</li>\n</ul>","frontmatter":{"title":"Objective C by example for a C# developer","date":"June 22, 2009","description":"This is a small set of code snippets that may assist as a quick reference when switching between C# and Objective-C concepts. It's all beginner level and I've skipped some major concepts that a book will explain, as well as any C related tasks."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2009-06-22-objective-c-by-example-for-a-csharp-developer/","previous":{"fields":{"slug":"/2009-06-18-wake-up-from-sleep-createwaitabletimer-in-csharp/"},"frontmatter":{"title":"Wake up from Sleep (CreateWaitableTimer) in C#"}},"next":{"fields":{"slug":"/2009-07-13-gzip-and-deflate-page-compression-in-asp-net/"},"frontmatter":{"title":"GZip and Deflate page compression in ASP.NET"}}}}
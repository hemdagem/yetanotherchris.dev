{"data":{"site":{"siteMetadata":{"title":"Another Chris","author":"Chris Small"}},"markdownRemark":{"id":"89b5c07c-32b9-5623-a4dc-03302c1e1a15","excerpt":"One of the biggest omissions in the TDD literature is the concept of code first vs test first. The discussion doesn’t seem to surface very often, possibly…","html":"<p>One of the biggest omissions in the TDD literature is the concept of code first vs test first. The discussion doesn’t seem to surface very often, possibly because it’s a more advanced topic.</p>\n<p>Both are valid ways of doing TDD, and after many years of doing both I think I’ve finally settled on a few good ways to decide which method to employ:</p>\n<h4>Test first:</h4>\n<ul>\n<li>You’re writing business or safety critical code</li>\n<li>You are experimenting with an API etc. that you don’t know how to use.</li>\n<li>You are pairing with someone</li>\n<li>Like most of us, you find writing tests later very monotonous work</li>\n<li>You’re doing a presentation on TDD</li>\n</ul>\n<h4>Code first</h4>\n<ul>\n<li>You’re writing a proof if concept, or small home project</li>\n<li>You haven’t fleshed out the API you’re writing yet, or unsure of it’s design</li>\n<li>You’re writing code that is so basic, such as de-serialization of a config file, or breaks the system in such an obvious way, tests can be added later</li>\n<li>You’re on your own and demotivated</li>\n</ul>\n<p>With the code first approach I’m not advocating lowering your test coverage - you would still have the tests in there before you ‘ship’.</p>","frontmatter":{"title":"Do you write unit tests before code, or after?","date":"May 05, 2016","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016-05-05-do you-write-unit-tests-before-code-or-after/","previous":{"fields":{"slug":"/2016-04-24-csharp-unit-test-generator/"},"frontmatter":{"title":"C# Unit test generator"}},"next":{"fields":{"slug":"/2016-05-08-podcast-of-the-week-may-2016/"},"frontmatter":{"title":"Podcast of the week - May 2016"}}}}
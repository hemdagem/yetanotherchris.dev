{"data":{"site":{"siteMetadata":{"title":"Another Chris","author":"Chris Small"}},"markdownRemark":{"id":"e0641adc-503d-5d03-b960-cb531269374d","excerpt":"This is nothing more than a list of plugins and tools that I use with Visual Studio, so I can remember where to get them each time I flatten Windows. Most of…","html":"<p>This is nothing more than a list of plugins and tools that I use with Visual Studio, so I can remember where to get them each time I flatten Windows. Most of these work with 2005 also.</p>\n<!--more-->\n<ul>\n<li><a href=\"http://www.roland-weigelt.de/ghostdoc/\">Ghostdoc</a> - autodocuments for you.</li>\n<li><a href=\"http://www.codeplex.com/SourceCodeOutliner\">Sourceoutliner</a> - your current class’ members ala the classview.</li>\n<li><a href=\"http://code.msdn.microsoft.com/PowerCommands\">Powercommands</a> - lots of new context menu options</li>\n<li><a href=\"http://msdn.microsoft.com/en-us/vcsharp/dd218053.aspx\">Coderush</a> - free version with some useful extra refactor tools</li>\n<li><a href=\"http://research.microsoft.com/en-us/projects/Pex/\">Pex</a> - automates creating unit tests, sort of</li>\n<li><a href=\"http://www.anotherchris.net/assets/2013/02/Snipper1.zip\">Snipper</a> - the tool I wrote for editing snippets</li>\n<li><a href=\"http://blog.scott.willeke.com/2008/05/slashdocs-c-xml-comment-add-in-updated.html\">Slashdocs</a> - extracts XML comments into a separate file from the source.</li>\n<li><a href=\"http://www.codeproject.com/KB/macros/JSLintVS.aspx\">JSLint compiler</a> - runs all .js files in your project through JSLint during compilation.</li>\n</ul>\n<p>And the others below are fairly standard tools:</p>\n<ul>\n<li><a href=\"http://www.ruizata.com/\">SQL Server Dumper</a></li>\n<li><a href=\"http://www.voidtools.com/\">Everything</a></li>\n<li><a href=\"http://liquidninja.com/metapad/download.html\">Metapad</a></li>\n<li><a href=\"http://www.sliver.com/dotnet/SnippetCompiler/\">Snippet Compiler</a></li>\n<li><a href=\"http://api.jquery.com/\">JQuery API</a></li>\n<li><a href=\"http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx\">Process Explorer</a></li>\n<li><a href=\"http://www.ultrapico.com/Expresso.htm\">Expresso Regex Tester</a> - free registration needed</li>\n<li><a href=\"http://www.7-zip.org/\">7zip</a></li>\n<li><a href=\"http://www.slysoft.com/en/virtual-clonedrive.html\">Virtual clone drive</a></li>\n<li><a href=\"http://www.speqmath.com/index.php?id=4\">SpecQ</a> - ditch calc.exe and use this, it works like notepad.</li>\n</ul>\n<h3>A decent tool for merges in Visual Studio 2008/2010</h3>\n<p>For diffing and merging, by far the best tool in my view is <a href=\"http://www.sourcegear.com/diffmerge/\">DiffMerge</a>, a free tool by SourceGear. You can configure it to work with Visual Studio by going to Tools:Options:Source Control:VSTFS:Configure User tools.</p>\n<p>From there, add these options for merge:</p>\n<ul>\n<li>Extension: .*</li>\n<li>Operation: Merge</li>\n<li>Command: C:\\Program Files\\SourceGear\\DiffMerge\\DiffMerge.exe</li>\n<li>Argument: /m /r=%4 /t1=%7 /t2=%9 /t3=%6 /c=%9 %2 %3 %1</li>\n</ul>\n<p>and these options for compare:</p>\n<ul>\n<li>Extension: .*</li>\n<li>Operation: Compare</li>\n<li>Command: C:\\Program Files\\SourceGear\\DiffMerge\\DiffMerge.exe</li>\n<li>Argument: /t1=%6 /t2=%7 %1 %2</li>\n</ul>\n<h3>Snippets</h3>\n<p>Here’s a few snippets I use a lot, in zipped format. Stick them in your C:\\Users\\USERNAME\\Documents\\Visual Studio 2008\\Code Snippets\\Visual C#\\My Code Snippetsfolder</p>\n<p><a href=\"/assets/2013/02/snippets.zip\">Snippets.zip</a></p>\n<ul>\n<li>aa: Assert.AreEqual(o,o);</li>\n<li>cr: Console.Readline()</li>\n<li>docctor: creates a constructor with MSDN format documentation. Made slightly redundant by Ghostdoc.</li>\n<li>doceq: creates Equals, ToString, GetHashCode with MSDN format documentation.</li>\n<li>eqsummary: creates Equals summary XML documentation in MSDN format.</li>\n<li>docevent: creates an Event and the raising method with MSDN format documentation.</li>\n<li>docgethashcode: MSDN format documentation for GetHashCode()</li>\n<li>doctostring: MSDN format documentation for ToString()</li>\n<li>propgg: getter property with a backing field</li>\n<li>propgs: getter/setter property with a backing field</li>\n<li>linq: this one is a bit stupid. I often forget the syntax of lambda select statements (I prefer fluent) so this spits out the format.</li>\n<li>newv: creates MyObject obj = new MyObject() where you enter the type and variable name.</li>\n<li>nullcheck: throws an ArgumentException if an argument is null</li>\n<li>snull: string.IsNullOrEmpty() snippet</li>\n<li>snullex: throws an ArgumentException if a string argument is null</li>\n<li>t3: sticks 3 lines of comments which I sometimes use when I have to write large sections of code in 1 method, and want to delimit them without regions. This was inspired by some C source some time ago but I should probably change this to /* and */</li>\n</ul>\n<p>And a <a href=\"/assets/2013/02/Dependency-property.zip\">dependency project snippet</a> for Silverlight, which saves many hours of typing.</p>\n<p>For Eclipse and Java/Android developer, <a href=\"/?p=924\">here is a settings file</a> that takes the standard Visual Studio 2010 code color scheme for your text editor, and also binds F5/F6 to debug/compile.</p>","frontmatter":{"title":"Visual Studio 2010 plugin and tools","date":"December 07, 2010","description":"A long list of Visual Studio 2008/2010 plugins and productivity tools. Since the extension manager arrived in 2010, the plugins on the list are a bit redundant."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2010-12-07-visual-studio-2010-plugin-and-tools/","previous":{"fields":{"slug":"/2010-11-29-screenshots/"},"frontmatter":{"title":"Spruce screenshots"}},"next":{"fields":{"slug":"/2010-12-08-installing-the-spruce-alpha/"},"frontmatter":{"title":"Installing the Spruce alpha"}}}}